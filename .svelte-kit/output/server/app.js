import { respond } from "@sveltejs/kit/ssr";
function noop() {
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
let current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
Promise.resolve();
const escaped = {
  '"': "&quot;",
  "'": "&#39;",
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;"
};
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
const missing_component = {
  $$render: () => ""
};
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
let on_destroy;
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(parent_component ? parent_component.$$.context : context || []),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css2) => css2.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
function afterUpdate() {
}
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}";
const css$2 = {
  code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t#svelte-announcer {\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttop: 0;\\n\\t\\tclip: rect(0 0 0 0);\\n\\t\\tclip-path: inset(50%);\\n\\t\\toverflow: hidden;\\n\\t\\twhite-space: nowrap;\\n\\t\\twidth: 1px;\\n\\t\\theight: 1px;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsDC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$2);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${``}`;
});
let base = "";
let assets = "";
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.png" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
const default_settings = { paths: { "base": "", "assets": "" } };
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  const hooks = get_hooks(user_hooks);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: assets + "/_app/start-8065b2e0.js",
      css: [assets + "/_app/assets/start-d5b4de3e.css"],
      js: [assets + "/_app/start-8065b2e0.js", assets + "/_app/chunks/vendor-9c9dd381.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => assets + "/_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2, request) => {
      hooks.handleError({ error: error2, request });
      error2.stack = options.get_stack(error2);
    },
    hooks,
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    prerender: true,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
const empty = () => ({});
const manifest = {
  assets: [{ "file": "favicon.png", "size": 1571, "type": "image/png" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/components\/FirstTime\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/components/FirstTime.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/components\/NoResults\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/components/NoResults.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/components\/Loading\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/components/Loading.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/components\/Footer\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/components/Footer.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/components\/Header\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/components/Header.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/api\/search\/?$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return search;
      })
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve }) => resolve(request)),
  handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
  serverFetch: hooks.serverFetch || fetch
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/components/FirstTime.svelte": () => Promise.resolve().then(function() {
    return FirstTime$1;
  }),
  "src/routes/components/NoResults.svelte": () => Promise.resolve().then(function() {
    return NoResults$1;
  }),
  "src/routes/components/Loading.svelte": () => Promise.resolve().then(function() {
    return Loading$1;
  }),
  "src/routes/components/Footer.svelte": () => Promise.resolve().then(function() {
    return Footer$1;
  }),
  "src/routes/components/Header.svelte": () => Promise.resolve().then(function() {
    return Header$1;
  })
};
const metadata_lookup = { "src/routes/__layout.svelte": { "entry": "pages/__layout.svelte-09603879.js", "css": ["assets/pages/__layout.svelte-b8816561.css"], "js": ["pages/__layout.svelte-09603879.js", "chunks/vendor-9c9dd381.js", "pages/components/Header.svelte-6a05e17a.js", "pages/components/Footer.svelte-33e94e1a.js"], "styles": [] }, ".svelte-kit/build/components/error.svelte": { "entry": "error.svelte-83d651d1.js", "css": [], "js": ["error.svelte-83d651d1.js", "chunks/vendor-9c9dd381.js"], "styles": [] }, "src/routes/index.svelte": { "entry": "pages/index.svelte-f2bb151f.js", "css": ["assets/pages/index.svelte-94a54a48.css"], "js": ["pages/index.svelte-f2bb151f.js", "chunks/vendor-9c9dd381.js", "pages/components/Loading.svelte-0a4edde9.js", "pages/components/NoResults.svelte-62865183.js", "pages/components/FirstTime.svelte-ccd94e04.js"], "styles": [] }, "src/routes/components/FirstTime.svelte": { "entry": "pages/components/FirstTime.svelte-ccd94e04.js", "css": [], "js": ["pages/components/FirstTime.svelte-ccd94e04.js", "chunks/vendor-9c9dd381.js"], "styles": [] }, "src/routes/components/NoResults.svelte": { "entry": "pages/components/NoResults.svelte-62865183.js", "css": [], "js": ["pages/components/NoResults.svelte-62865183.js", "chunks/vendor-9c9dd381.js"], "styles": [] }, "src/routes/components/Loading.svelte": { "entry": "pages/components/Loading.svelte-0a4edde9.js", "css": [], "js": ["pages/components/Loading.svelte-0a4edde9.js", "chunks/vendor-9c9dd381.js"], "styles": [] }, "src/routes/components/Footer.svelte": { "entry": "pages/components/Footer.svelte-33e94e1a.js", "css": [], "js": ["pages/components/Footer.svelte-33e94e1a.js", "chunks/vendor-9c9dd381.js"], "styles": [] }, "src/routes/components/Header.svelte": { "entry": "pages/components/Header.svelte-6a05e17a.js", "css": [], "js": ["pages/components/Header.svelte-6a05e17a.js", "chunks/vendor-9c9dd381.js"], "styles": [] } };
async function load_component(file) {
  const { entry, css: css2, js, styles } = metadata_lookup[file];
  return {
    module: await module_lookup[file](),
    entry: assets + "/_app/" + entry,
    css: css2.map((dep) => assets + "/_app/" + dep),
    js: js.map((dep) => assets + "/_app/" + dep),
    styles
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
const get = async (field) => {
  const query = field.query.toString().split("=")[1];
  if (query.length === 0)
    return { body: { data: null } };
  const res = await fetch(`https://world.openfoodfacts.org/cgi/search.pl?search_terms=${query}&search_simple=1&json=1`);
  const data = await res.json();
  return { body: { results: data.products } };
};
var search = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get
});
const Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<header><div class="${"bg-green-600 py-3.5 flex justify-around items-center"}">
        <div class="${"ml-2.5"}"><a href="${"#"}"><h3 class="${"text-white font-medium text-2xl"}"><span class="${"font-bold"}">nwahs</span>&#39; Unnamed Front-End Website
                </h3></a></div>
        
        
        <div class="${"mr-2.5"}"><nav class="${"text-white uppercase"}"><a href="${"#"}" class="${"mx-3.5"}">Home</a>
                <a href="${"#"}" class="${"mx-3.5"}">About</a>
                <a href="${"#"}" class="${"mx-3.5"}">My Other Projects</a></nav></div>
        </div></header>`;
});
var Header$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Header
});
const Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<footer><div class="${"bg-green-500 flex justify-center items-center pt-3.5 pb-2.5"}"><h3 class="${"text-white font-medium"}">Made with \u2764 <span class="${"mx-2"}">\u2022</span> <a href="${""}">GitLab</a></h3></div></footer>`;
});
var Footer$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Footer
});
var __layout_svelte_svelte_type_style_lang = "/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n	box-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n	-moz-tab-size: 4;\n	-o-tab-size: 4;\n	   tab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n	line-height: 1.15; /* 1 */\n	-webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n	margin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n	font-family:\n		system-ui,\n		-apple-system, /* Firefox supports this but not yet `system-ui` */\n		'Segoe UI',\n		Roboto,\n		Helvetica,\n		Arial,\n		sans-serif,\n		'Apple Color Emoji',\n		'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n	height: 0; /* 1 */\n	color: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n	-webkit-text-decoration: underline dotted;\n	        text-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n	font-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n	font-family:\n		ui-monospace,\n		SFMono-Regular,\n		Consolas,\n		'Liberation Mono',\n		Menlo,\n		monospace; /* 1 */\n	font-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n	font-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n	font-size: 75%;\n	line-height: 0;\n	position: relative;\n	vertical-align: baseline;\n}\n\nsub {\n	bottom: -0.25em;\n}\n\nsup {\n	top: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n	text-indent: 0; /* 1 */\n	border-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n	font-family: inherit; /* 1 */\n	font-size: 100%; /* 1 */\n	line-height: 1.15; /* 1 */\n	margin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n	text-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n	-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n	border-style: none;\n	padding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n	outline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n	box-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n	padding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n	vertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n	height: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n	-webkit-appearance: textfield; /* 1 */\n	outline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n	-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n	-webkit-appearance: button; /* 1 */\n	font: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n	display: list-item;\n}/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: currentColor; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\n/**\n * 1. Make replaced elements `display: block` by default as that's\n *    the behavior you want almost all of the time. Inspired by\n *    CSS Remedy, with `svg` added as well.\n *\n *    https://github.com/mozdevs/cssremedy/issues/14\n * \n * 2. Add `vertical-align: middle` to align replaced elements more\n *    sensibly by default when overriding `display` by adding a\n *    utility like `inline`.\n *\n *    This can trigger a poorly considered linting error in some\n *    tools but is included by design.\n * \n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Ensure the default browser behavior of the `hidden` attribute.\n */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n	--tw-translate-x: 0;\n	--tw-translate-y: 0;\n	--tw-rotate: 0;\n	--tw-skew-x: 0;\n	--tw-skew-y: 0;\n	--tw-scale-x: 1;\n	--tw-scale-y: 1;\n	--tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n	--tw-border-opacity: 1;\n	border-color: rgba(229, 231, 235, var(--tw-border-opacity));\n}.pointer-events-none {\n	pointer-events: none;\n}.absolute {\n	position: absolute;\n}.mx-2\\.5 {\n	margin-left: 0.625rem;\n	margin-right: 0.625rem;\n}.mx-2 {\n	margin-left: 0.5rem;\n	margin-right: 0.5rem;\n}.my-7 {\n	margin-top: 1.75rem;\n	margin-bottom: 1.75rem;\n}.my-2\\.5 {\n	margin-top: 0.625rem;\n	margin-bottom: 0.625rem;\n}.mx-3 {\n	margin-left: 0.75rem;\n	margin-right: 0.75rem;\n}.my-2 {\n	margin-top: 0.5rem;\n	margin-bottom: 0.5rem;\n}.my-3 {\n	margin-top: 0.75rem;\n	margin-bottom: 0.75rem;\n}.mx-20 {\n	margin-left: 5rem;\n	margin-right: 5rem;\n}.my-5 {\n	margin-top: 1.25rem;\n	margin-bottom: 1.25rem;\n}.mx-3\\.5 {\n	margin-left: 0.875rem;\n	margin-right: 0.875rem;\n}.mx-auto {\n	margin-left: auto;\n	margin-right: auto;\n}.mt-16 {\n	margin-top: 4rem;\n}.mt-5 {\n	margin-top: 1.25rem;\n}.mt-1\\.5 {\n	margin-top: 0.375rem;\n}.mt-1 {\n	margin-top: 0.25rem;\n}.mt-20 {\n	margin-top: 5rem;\n}.mt-8 {\n	margin-top: 2rem;\n}.mt-3 {\n	margin-top: 0.75rem;\n}.mt-2\\.5 {\n	margin-top: 0.625rem;\n}.mt-2 {\n	margin-top: 0.5rem;\n}.mt-0\\.5 {\n	margin-top: 0.125rem;\n}.mt-0 {\n	margin-top: 0px;\n}.ml-1\\.5 {\n	margin-left: 0.375rem;\n}.mr-1 {\n	margin-right: 0.25rem;\n}.ml-1 {\n	margin-left: 0.25rem;\n}.mt-10 {\n	margin-top: 2.5rem;\n}.mb-5 {\n	margin-bottom: 1.25rem;\n}.ml-48 {\n	margin-left: 12rem;\n}.ml-10 {\n	margin-left: 2.5rem;\n}.mr-3 {\n	margin-right: 0.75rem;\n}.mt-40 {\n	margin-top: 10rem;\n}.ml-2\\.5 {\n	margin-left: 0.625rem;\n}.ml-2 {\n	margin-left: 0.5rem;\n}.mr-2\\.5 {\n	margin-right: 0.625rem;\n}.mr-2 {\n	margin-right: 0.5rem;\n}.flex {\n	display: flex;\n}.h-16 {\n	height: 4rem;\n}.translate-x-5 {\n	--tw-translate-x: 1.25rem;\n	transform: var(--tw-transform);\n}.translate-y-5 {\n	--tw-translate-y: 1.25rem;\n	transform: var(--tw-transform);\n}.-translate-x-8 {\n	--tw-translate-x: -2rem;\n	transform: var(--tw-transform);\n}.translate-y-0\\.5 {\n	--tw-translate-y: 0.125rem;\n	transform: var(--tw-transform);\n}.translate-y-0 {\n	--tw-translate-y: 0px;\n	transform: var(--tw-transform);\n}.items-center {\n	align-items: center;\n}.justify-center {\n	justify-content: center;\n}.justify-around {\n	justify-content: space-around;\n}.rounded-full {\n	border-radius: 9999px;\n}.rounded-lg {\n	border-radius: 0.5rem;\n}.border-4 {\n	border-width: 4px;\n}.border-gray-200 {\n	--tw-border-opacity: 1;\n	border-color: rgba(229, 231, 235, var(--tw-border-opacity));\n}.bg-gray-800 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(31, 41, 55, var(--tw-bg-opacity));\n}.bg-gray-200 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(229, 231, 235, var(--tw-bg-opacity));\n}.bg-green-800 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(6, 95, 70, var(--tw-bg-opacity));\n}.bg-green-500 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(16, 185, 129, var(--tw-bg-opacity));\n}.bg-yellow-400 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(251, 191, 36, var(--tw-bg-opacity));\n}.bg-yellow-600 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(217, 119, 6, var(--tw-bg-opacity));\n}.bg-red-600 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(220, 38, 38, var(--tw-bg-opacity));\n}.bg-gray-700 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(55, 65, 81, var(--tw-bg-opacity));\n}.bg-green-600 {\n	--tw-bg-opacity: 1;\n	background-color: rgba(5, 150, 105, var(--tw-bg-opacity));\n}.px-16 {\n	padding-left: 4rem;\n	padding-right: 4rem;\n}.py-2 {\n	padding-top: 0.5rem;\n	padding-bottom: 0.5rem;\n}.px-10 {\n	padding-left: 2.5rem;\n	padding-right: 2.5rem;\n}.px-2\\.5 {\n	padding-left: 0.625rem;\n	padding-right: 0.625rem;\n}.py-5 {\n	padding-top: 1.25rem;\n	padding-bottom: 1.25rem;\n}.px-2 {\n	padding-left: 0.5rem;\n	padding-right: 0.5rem;\n}.py-3 {\n	padding-top: 0.75rem;\n	padding-bottom: 0.75rem;\n}.px-3 {\n	padding-left: 0.75rem;\n	padding-right: 0.75rem;\n}.py-3\\.5 {\n	padding-top: 0.875rem;\n	padding-bottom: 0.875rem;\n}.pl-14 {\n	padding-left: 3.5rem;\n}.pb-2 {\n	padding-bottom: 0.5rem;\n}.pt-3\\.5 {\n	padding-top: 0.875rem;\n}.pb-2\\.5 {\n	padding-bottom: 0.625rem;\n}.pt-3 {\n	padding-top: 0.75rem;\n}.text-center {\n	text-align: center;\n}.text-right {\n	text-align: right;\n}.text-4xl {\n	font-size: 2.25rem;\n	line-height: 2.5rem;\n}.text-lg {\n	font-size: 1.125rem;\n	line-height: 1.75rem;\n}.text-2xl {\n	font-size: 1.5rem;\n	line-height: 2rem;\n}.text-3xl {\n	font-size: 1.875rem;\n	line-height: 2.25rem;\n}.text-sm {\n	font-size: 0.875rem;\n	line-height: 1.25rem;\n}.text-6xl {\n	font-size: 3.75rem;\n	line-height: 1;\n}.text-5xl {\n	font-size: 3rem;\n	line-height: 1;\n}.text-9xl {\n	font-size: 8rem;\n	line-height: 1;\n}.text-xl {\n	font-size: 1.25rem;\n	line-height: 1.75rem;\n}.font-bold {\n	font-weight: 700;\n}.font-normal {\n	font-weight: 400;\n}.font-medium {\n	font-weight: 500;\n}.uppercase {\n	text-transform: uppercase;\n}.text-white {\n	--tw-text-opacity: 1;\n	color: rgba(255, 255, 255, var(--tw-text-opacity));\n}.text-gray-300 {\n	--tw-text-opacity: 1;\n	color: rgba(209, 213, 219, var(--tw-text-opacity));\n}.text-green-600 {\n	--tw-text-opacity: 1;\n	color: rgba(5, 150, 105, var(--tw-text-opacity));\n}.text-gray-400 {\n	--tw-text-opacity: 1;\n	color: rgba(156, 163, 175, var(--tw-text-opacity));\n}.text-blue-500 {\n	--tw-text-opacity: 1;\n	color: rgba(59, 130, 246, var(--tw-text-opacity));\n}.text-red-600 {\n	--tw-text-opacity: 1;\n	color: rgba(220, 38, 38, var(--tw-text-opacity));\n}.text-gray-600 {\n	--tw-text-opacity: 1;\n	color: rgba(75, 85, 99, var(--tw-text-opacity));\n}.text-green-500 {\n	--tw-text-opacity: 1;\n	color: rgba(16, 185, 129, var(--tw-text-opacity));\n}.text-red-500 {\n	--tw-text-opacity: 1;\n	color: rgba(239, 68, 68, var(--tw-text-opacity));\n}.text-opacity-50 {\n	--tw-text-opacity: 0.5;\n}.outline-none {\n	outline: 2px solid transparent;\n	outline-offset: 2px;\n}.duration-300 {\n	transition-duration: 300ms;\n}.hover\\:bg-gray-300:hover {\n	--tw-bg-opacity: 1;\n	background-color: rgba(209, 213, 219, var(--tw-bg-opacity));\n}.hover\\:text-blue-600:hover {\n	--tw-text-opacity: 1;\n	color: rgba(37, 99, 235, var(--tw-text-opacity));\n}.hover\\:text-green-600:hover {\n	--tw-text-opacity: 1;\n	color: rgba(5, 150, 105, var(--tw-text-opacity));\n}";
const css$1 = {
  code: "@tailwind base;@tailwind components;@tailwind utilities;",
  map: `{"version":3,"file":"__layout.svelte","sources":["__layout.svelte"],"sourcesContent":["<script>\\r\\n    import Header from './components/Header.svelte';\\r\\n    import Footer from './components/Footer.svelte';\\r\\n<\/script>\\r\\n\\r\\n<svelte:head>\\r\\n    <script defer src=\\"https://use.fontawesome.com/releases/v5.15.3/js/all.js\\" integrity=\\"sha384-haqrlim99xjfMxRP6EWtafs0sB1WKcMdynwZleuUSwJR0mDeRYbhtY+KPMr+JL6f\\" crossorigin=\\"anonymous\\"><\/script>\\r\\n</svelte:head>\\r\\n\\r\\n<div>\\r\\n    <Header />\\r\\n    <slot />\\r\\n    <Footer />\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n    @tailwind base;\\r\\n    @tailwind components;\\r\\n    @tailwind utilities;\\r\\n</style>"],"names":[],"mappings":"AAgBI,UAAU,IAAI,CAAC,AACf,UAAU,UAAU,CAAC,AACrB,UAAU,SAAS,CAAC"}`
};
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$1);
  return `${$$result.head += `<script defer src="${"https://use.fontawesome.com/releases/v5.15.3/js/all.js"}" integrity="${"sha384-haqrlim99xjfMxRP6EWtafs0sB1WKcMdynwZleuUSwJR0mDeRYbhtY+KPMr+JL6f"}" crossorigin="${"anonymous"}" data-svelte="svelte-1f3tvy6"><\/script>`, ""}

<div>${validate_component(Header, "Header").$$render($$result, {}, {}, {})}
    ${slots.default ? slots.default({}) : ``}
    ${validate_component(Footer, "Footer").$$render($$result, {}, {}, {})}
</div>`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
function load({ error: error2, status }) {
  return { props: { error: error2, status } };
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<pre>${escape(error2.message)}</pre>



${error2.frame ? `<pre>${escape(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load
});
const subscriber_queue = [];
function writable(value, start = noop) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
const food_data = writable({});
const loading_animation = "src/assets/loading-animation.gif";
const Loading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"text-center mt-40"}"><div class="${"text-gray-300"}"><img class="${"pointer-events-none mx-auto"}"${add_attribute("src", loading_animation, 0)} alt="${"#"}" width="${"200"}">
        <div class="${"mt-5"}"><h3 class="${"text-2xl"}"><i>Loading... now fetching the database!</i></h3></div></div></div>`;
});
var Loading$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Loading
});
const NoResults = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { term = "" } = $$props;
  if ($$props.term === void 0 && $$bindings.term && term !== void 0)
    $$bindings.term(term);
  return `<div class="${"flex justify-center text-center mt-40"}"><div class="${"text-gray-300"}"><i class="${"fas fa-exclamation-triangle text-9xl text-red-500"}"></i>
        <div class="${"mt-8"}"><h3 class="${"text-xl"}">Sorry! No results found using <span class="${"text-white"}">${escape(term)}</span> from the database.
            </h3></div></div></div>`;
});
var NoResults$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": NoResults
});
const FirstTime = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div class="${"flex justify-center text-center mt-40"}"><div class="${"text-gray-300"}"><i class="${"fas fa-question-circle text-9xl"}"></i>
        <div class="${"mt-8"}"><h3 class="${"text-xl"}">Looks like it&#39;s your first time here! Why don&#39;t you try searching a food you know for a test?
            </h3></div></div></div>`;
});
var FirstTime$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": FirstTime
});
var index_svelte_svelte_type_style_lang = ".w-custom.svelte-1nr4nur{width:48rem}";
const css = {
  code: ".w-custom.svelte-1nr4nur{width:48rem}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script>\\n    import { fade } from 'svelte/transition';\\n    import { food_data } from '../stores/results.js';\\n    import Loading from './components/Loading.svelte';\\n    import NoResults from './components/NoResults.svelte';\\n    import FirstTime from './components/FirstTime.svelte';\\n\\n    let search_inquiry = '', lastSearch_inquiry = '';\\n    let hasResults = false, firstSearch = true;\\n\\n    const no_image = 'src/assets/missing-image.jpg';\\n\\n    const search = async ( food ) => {\\n        if ( food.length === 0 ) return alert( 'lmao' );\\n\\n        firstSearch = false;\\n        lastSearch_inquiry = search_inquiry;\\n\\n        const regex = food.trim().replace( / /g, '+' );\\n        const res = await fetch( \`./api/search?food=\${ regex }\` );\\n        const data = await res.json();\\n\\n        if ( data.results.length === 0 ) return hasResults = false;\\n\\n        $food_data = data.results;\\n        hasResults = true;\\n    }\\n<\/script>\\n\\n<div class=\\"flex justify-center bg-gray-800\\" style=\\"min-height: 100vh\\">\\n    <div class=\\"mt-16\\">\\n        <!-- PAGE TITLE -->\\n        <div class=\\"mt-5 text-center\\">\\n            <h1 class=\\"text-white text-4xl\\">\\n                Unnamed Food Data Search\\n            </h1>\\n            <h3 class=\\"text-gray-300 text-lg mt-1.5\\">\\n                Powered by <a class='text-green-600' href=\\"https://world.openfoodfacts.org\\">Open Food Facts</a>' API\\n            </h3>\\n        </div>\\n        <!-- /PAGE TITLE -->\\n        <!-- SEARCH BAR -->\\n        <div class=\\"mt-20 text-center\\">\\n            <!-- SEARCH BAR ICON -->\\n            <i class=\\"text-gray-400 absolute translate-x-5 translate-y-5 fas fa-search text-2xl\\"></i>\\n            <!-- /SEARCH BAR ICON -->\\n            <input class='pl-14 rounded-full w-custom h-16 outline-none' type=\\"text\\" placeholder=\\"Search here!\\" bind:value={ search_inquiry } />\\n            <div class=\\"mt-8 flex justify-center\\">\\n                <button class=\\"mx-2.5 rounded-lg bg-gray-200 px-16 py-2 hover:bg-gray-300 duration-300\\" on:click={ search( search_inquiry ) }>Search</button>\\n                <button class=\\"mx-2.5 rounded-lg bg-gray-200 px-10 py-2 hover:bg-gray-300 duration-300\\">Random Food</button>\\n            </div>\\n        </div>\\n        <!-- /SEARCH BAR -->\\n        <!-- RESULTS -->\\n        <div class=\\"mt-16\\">\\n            { #if firstSearch }\\n                <FirstTime />\\n            { :else }\\n                { #await search( lastSearch_inquiry ) }\\n                    <Loading />\\n                { :then _ }\\n                    { #if !hasResults && !firstSearch }\\n                        <NoResults term={ lastSearch_inquiry } />\\n                    { :else if hasResults && !firstSearch }\\n                        { #each $food_data as food }\\n                            <!--{ #each test as food }-->\\n                            <div class=\\"bg-gray-200 my-7 rounded-lg\\" in:fade=\\"{ { duration: 1000 } }\\" >\\n                                <div class=\\"flex\\">\\n                                    <div class=\\"my-2.5 mx-3\\">\\n                                        <!-- PRODUCT LOGO -->\\n                                        { #if food.image_url === '' || typeof food.image_url === 'undefined' }\\n                                            <img class='rounded-lg' style='width: 25rem; height: 17rem;' src={ no_image } alt=\\"\\">\\n                                        { :else }\\n                                            <img class='rounded-lg' style='width: 25rem; height: 17rem;' src={ food.image_url } alt=\\"\\">\\n                                        { /if }\\n                                        <!-- /PRODUCT LOGO -->\\n                                        <div>\\n                                            <div class=\\"mt-3\\">\\n                                                <!-- INGREDIENTS TITLE -->\\n                                                <h1 class=\\"text-3xl\\">\\n                                                    Ingredients\\n                                                </h1>\\n                                                <!-- /INGREDIENTS TITLE -->\\n                                                <h3 class=\\"mt-1.5 text-sm\\">\\n                                                    \u2192 Ingredients are listed in order of importance (quantity).\\n                                                </h3>\\n                                            </div>\\n                                            <!-- INGREDIENTS -->\\n                                            <div style=\\"width: 25rem\\">\\n                                                <!-- INGREDIENTS LIST -->\\n                                                <div class=\\"mt-2.5\\">\\n                                                    <h1 class=\\"font-bold\\">\\n                                                        Ingredients list:\\n                                                    </h1>\\n                                                    <span class=\\"mt-0.5\\">\\n                                                        { #if food.ingredients_text_en !== '' }\\n                                                            { food.ingredients_text_en }\\n                                                        { :else if food.ingredients_text_fr !== '' }\\n                                                            { food.ingredients_text_fr }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </div>\\n                                                <!-- /INGREDIENTS LIST -->\\n                                                <!-- SUBSTANCES OR PRODUCTS... -->\\n                                                <div class=\\"mt-3\\">\\n                                                    <h1 class=\\"font-bold\\">\\n                                                        Substances or products causing allergies or intolerances:\\n                                                    </h1>\\n                                                    <span class=\\"mt-0.5\\">\\n                                                        { #if food.allergens !== '' }\\n                                                            { food.allergens.replace( /,/g, ', ' ).replace( /en:/g, '' ).replace( /fr:/g, '' ) }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </div>\\n                                                <!-- /SUBSTANCES OR PRODUCTS... -->\\n                                            </div>\\n                                            <!-- /INGREDIENTS TITLE -->\\n                                        </div>\\n                                        <!-- /INGREDIENTS -->\\n                                    </div>\\n                                    <div class=\\"my-3 ml-1.5 mr-1\\">\\n                                        <!-- PRODUCT TITLE -->\\n                                        <h1 class=\\"text-3xl\\">\\n                                            { #if food.abbreviated_product_name !== '' && typeof food.abbreviated_product_name !== 'undefined' }\\n                                                { food.abbreviated_product_name }\\n                                            { :else if food.abbreviated_product_name_fr !== '' && typeof food.abbreviated_product_name_fr !== 'undefined' }\\n                                                { food.abbreviated_product_name_fr }\\n                                            { :else if food.product_name_en !== '' }\\n                                                { food.product_name_en }\\n                                            { :else if food.product_name_fr !== '' }\\n                                                { food.product_name_fr }\\n                                            { :else }\\n                                                ? ? ?\\n                                            { /if }\\n                                        </h1>\\n                                        <h3 class=\\"mt-1.5 text-md font-bold\\">\\n                                            Serving Size:\\n                                            <span class=\\"font-normal\\">\\n                                                { #if food.serving_quantity !== '' }\\n                                                    { food.serving_quantity }\\n                                                { :else }\\n                                                    ? ? ?\\n                                                { /if }\\n                                                g\\n                                            </span>\\n                                        </h3>\\n                                        <h3 class=\\"mt-1.5 text-md\\">\\n                                            Barcode:\\n                                            { #if food.id !== '' }\\n                                                { food._id }\\n                                            { :else }\\n                                                ? ? ?\\n                                            { /if }\\n                                            (EAN / EAN-13)\\n                                        </h3>\\n                                        <!-- /PRODUCT TITLE -->\\n                                        <!-- PRODUCT CHARACTERISTICS -->\\n                                        <div class=\\"mt-10\\" style=\\"width: 30rem;\\">\\n                                            <!-- CHARACTERISTICS TITLE -->\\n                                            <h1 class=\\"text-2xl\\">\\n                                                Product Characteristics\\n                                            </h1>\\n                                            <!-- /CHARACTERISTICS TITLE -->\\n                                            <!-- QUANTITY -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Quantity:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if food.product_quantity !== '' }\\n                                                            { food.product_quantity }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                     g</span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /QUANTITY -->\\n                                            <!-- PACKAGING -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Packaging:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if typeof food.packaging !== 'undefined' }\\n                                                            { #if food.packaging !== '' }\\n                                                                { food.packaging.replace( /,/g, ', ' ).replace( /en:/g, '' ).replace( /fr:/g, '' ) }\\n                                                            { /if }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /PACKAGING -->\\n                                            <!-- BRANDS -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Brands:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if food.brands !== '' }\\n                                                            { food.brands.replace( /,/g, ', ' ).replace( /en:/g, '' ).replace( /fr:/g, '' ) }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /BRANDS -->\\n                                            <!-- CATEGORIES -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Categories:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if food.categories !== '' }\\n                                                            { food.categories.replace( /,/g, ', ' ).replace( /en:/g, '' ).replace( /fr:/g, '' ) }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /CATEGORIES -->\\n                                            <!-- LABELS, CERTIFICATIONS, AWARDS -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Labels, Certifications, Awards:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if typeof food.labels !== 'undefined' }\\n                                                            { #if food.labels !== '' }\\n                                                                { food.labels.replace( /,/g, ', ' ).replace( /en:/g, '' ).replace( /fr:/g, '' ) }\\n                                                            { /if }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /LABELS, CERTIFICATIONS, AWARDS -->\\n                                            <!-- LINK TO THE PRODUCTS... -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Link to the product page on the official site of the producer:\\n                                                    <br>\\n                                                    { #if food.link !== '' }\\n                                                        <span class=\\"font-normal text-blue-500 hover:text-blue-600 duration-300\\">\\n                                                            <a href={ food.link }>\\n                                                                { food.link }\\n                                                            </a>\\n                                                        </span>\\n                                                    { :else }\\n                                                        <span class=\\"font-normal\\">\\n                                                            ? ? ?\\n                                                        </span>\\n                                                    { /if }\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /LINK TO THE PRODUCTS... -->\\n                                            <!-- STORES -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Stores:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if typeof food.stores !== 'undefined' }\\n                                                            { #if food.stores !== '' }\\n                                                                { food.stores.replace( /,/g, ', ' ) }\\n                                                            { /if }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /STORES -->\\n                                            <!-- COUNTRIES WHERE SOLD -->\\n                                            <div class=\\"mt-3 mb-5\\">\\n                                                <h3 class=\\"font-bold\\">\\n                                                    Countries where sold:\\n                                                    <span class=\\"font-normal\\">\\n                                                        { #if typeof food.countries !== 'undefined' }\\n                                                            { #if food.countries !== '' }\\n                                                                { food.countries.replace( /,/g, ', ' ) }\\n                                                            { /if }\\n                                                        { :else }\\n                                                            ? ? ?\\n                                                        { /if }\\n                                                    </span>\\n                                                </h3>\\n                                            </div>\\n                                            <!-- /COUNTRIES WHERE SOLD -->\\n                                        </div>\\n                                        <!-- /PRODUCT CHARACTERISTICS -->\\n                                    </div>\\n                                </div>\\n                                <!-- NUTRITION FACTS -->\\n                                <div class=\\"mt-5 mx-3\\">\\n                                    <h1 class=\\"text-3xl\\">\\n                                        Nutrition Facts\\n                                    </h1>\\n                                    <div class=\\"mt-3 mx-20 flex\\">\\n                                        <!-- NUTRISCORE -->\\n                                        <div class=\\"mt-2.5\\">\\n                                            <h3 class=\\"text-lg\\">\\n                                                NutriScore color nutrition grade\\n                                            </h3>\\n                                            <!-- NUTRISCORE SCORE -->\\n                                            <div class=\\"mt-2.5 flex items-center\\">\\n                                                { #if food.ecoscore_grade === 'a' }\\n                                                    <!-- NUTRISCORE SCORE A -->\\n                                                    <span class=\\"bg-green-800 border-4 border-gray-200 text-6xl rounded-full text-white font-bold px-2.5 py-5\\">A</span>\\n                                                    <span class=\\"bg-green-500 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">B</span>\\n                                                    <span class=\\"bg-yellow-400 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">C</span>\\n                                                    <span class=\\"bg-yellow-600 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">D</span>\\n                                                    <span class=\\"bg-red-600 text-5xl text-white text-opacity-50 font-bold px-3 py-3\\">E</span>\\n                                                    <!-- /NUTRISCORE SCORE A-->\\n                                                { :else if food.ecoscore_grade === 'b' }\\n                                                    <!-- NUTRISCORE SCORE B -->\\n                                                    <span class=\\"bg-green-800 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">A</span>\\n                                                    <span class=\\"bg-green-500 border-4 border-gray-200 text-6xl rounded-full text-white font-bold px-2.5 py-5\\">B</span>\\n                                                    <span class=\\"bg-yellow-400 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">C</span>\\n                                                    <span class=\\"bg-yellow-600 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">D</span>\\n                                                    <span class=\\"bg-red-600 text-5xl text-white font-bold text-opacity-50 px-3 py-3\\">E</span>\\n                                                    <!-- /NUTRISCORE SCORE B -->\\n                                                { :else if food.ecoscore_grade === 'c' }\\n                                                    <!-- NUTRISCORE SCORE C -->\\n                                                    <span class=\\"bg-green-800 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">A</span>\\n                                                    <span class=\\"bg-green-500 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">B</span>\\n                                                    <span class=\\"bg-yellow-400 border-4 border-gray-200 text-6xl rounded-full text-white font-bold px-2.5 py-5\\">C</span>\\n                                                    <span class=\\"bg-yellow-600 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">D</span>\\n                                                    <span class=\\"bg-red-600 text-5xl text-white font-bold text-opacity-50 px-3 py-3\\">E</span>\\n                                                    <!-- /NUTRISCORE SCORE C -->\\n                                                { :else if food.ecoscore_grade === 'd' }\\n                                                    <!-- NUTRISCORE SCORE D -->\\n                                                    <span class=\\"bg-green-800 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">A</span>\\n                                                    <span class=\\"bg-green-500 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">B</span>\\n                                                    <span class=\\"bg-yellow-400 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">C</span>\\n                                                    <span class=\\"bg-yellow-600 border-4 border-gray-200 text-6xl rounded-full text-white font-bold px-2.5 py-5\\">D</span>\\n                                                    <span class=\\"bg-red-600 text-5xl text-white font-bold text-opacity-50 px-3 py-3\\">E</span>\\n                                                    <!-- /NUTRISCORE SCORE D -->\\n                                                { :else if food.ecoscore_grade === 'e' }\\n                                                    <!-- NUTRISCORE SCORE E -->\\n                                                    <span class=\\"bg-green-800 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">A</span>\\n                                                    <span class=\\"bg-green-500 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">B</span>\\n                                                    <span class=\\"bg-yellow-400 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">C</span>\\n                                                    <span class=\\"bg-yellow-600 text-5xl text-white font-bold text-opacity-50 px-3 py-3\\">D</span>\\n                                                    <span class=\\"bg-red-600 border-4 border-gray-200 text-6xl rounded-full text-white font-bold px-2.5 py-5\\">E</span>\\n                                                    <!-- /NUTRISCORE SCORE E -->\\n                                                { :else }\\n                                                    <!-- NO SCORE -->\\n                                                    <span class=\\"bg-green-800 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">A</span>\\n                                                    <span class=\\"bg-green-500 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">B</span>\\n                                                    <span class=\\"bg-yellow-400 text-5xl text-white text-opacity-50 font-bold px-2.5 py-3\\">C</span>\\n                                                    <span class=\\"bg-yellow-600 text-5xl text-white font-bold text-opacity-50 px-3 py-3\\">D</span>\\n                                                    <span class=\\"bg-red-600 text-5xl text-white font-bold text-opacity-50 px-3 py-3\\">E</span>\\n                                                    <span class=\\"bg-gray-700 border-4 border-gray-200 text-6xl rounded-full text-white font-bold px-2.5 py-5\\">?</span>\\n                                                    <!-- NO SCORE -->\\n                                                { /if }\\n                                            </div>\\n                                        </div>\\n                                        <!-- /NUTRISCORE -->\\n                                        <!-- NUTRIENT LEVELS -->\\n                                        <div class=\\"ml-48 mt-2.5\\">\\n                                            <h1 class=\\"text-lg\\">\\n                                                Nutrient levels for 100g\\n                                            </h1>\\n                                            <!-- NUTRIENT LEVELS QTY-->\\n                                            <div class=\\"mt-2 ml-10\\">\\n                                                <!-- FAT QUANTITY -->\\n                                                <div class=\\"my-3\\">\\n                                                    { #if food.nutrient_levels.fat === 'high' }\\n                                                        <i class=\\"text-red-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Fat</span> in high quantity</p>\\n                                                    { :else if food.nutrient_levels.fat === 'low' }\\n                                                        <i class=\\"text-green-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Fat</span> in low quantity</p>\\n                                                    { :else }\\n                                                        <i class=\\"text-gray-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Fat</span> in unknown quantity</p>\\n                                                    { /if }\\n                                                </div>\\n                                                <!-- /FAT QUANTITY -->\\n                                                <!-- SATURATED FAT QUANTITY -->\\n                                                <div class=\\"my-3\\">\\n                                                    { #if Object.values( food.nutrient_levels )[2] === 'high' }\\n                                                        <i class=\\"text-red-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Saturated Fat</span> in high quantity</p>\\n                                                    { :else if Object.values( food.nutrient_levels )[2] === 'low' }\\n                                                        <i class=\\"text-green-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Saturated Fat</span> in low quantity</p>\\n                                                    { :else }\\n                                                        <i class=\\"text-gray-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Saturated Fat</span> in unknown quantity</p>\\n                                                    { /if }\\n                                                </div>\\n                                                <!-- /SATURATED FAT QUANTITY -->\\n                                                <!-- SUGARS QUANTITY -->\\n                                                <div class=\\"my-3\\">\\n                                                    { #if food.nutrient_levels.sugars === 'high' }\\n                                                        <i class=\\"text-red-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Sugars</span> in high quantity</p>\\n                                                    { :else if food.nutrient_levels.sugars === 'low' }\\n                                                        <i class=\\"text-green-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Sugars</span> in low quantity</p>\\n                                                    { :else }\\n                                                        <i class=\\"text-gray-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Sugars</span> in unknown quantity</p>\\n                                                    { /if }\\n                                                </div>\\n                                                <!-- /SUGARS QUANTITY -->\\n                                                <!-- SALT QUANTITY -->\\n                                                <div class=\\"my-3\\">\\n                                                    { #if food.nutrient_levels.salt === 'high' }\\n                                                        <i class=\\"text-red-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Salt</span> in high quantity</p>\\n                                                    { :else if food.nutrient_levels.salt === 'low' }\\n                                                        <i class=\\"text-green-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Salt</span> in low quantity</p>\\n                                                    { :else }\\n                                                        <i class=\\"text-gray-600 absolute fas fa-circle text-2xl -translate-x-8 translate-y-0.5\\"></i>\\n                                                        <p class=\\"ml-1\\"><span class=\\"font-bold\\">Salt</span> in unknown quantity</p>\\n                                                    { /if }\\n                                                </div>\\n                                                <!-- /SALT QUANTITY -->\\n                                            </div>\\n                                            <!-- /NUTRIENT LEVELS QTY -->\\n                                        </div>\\n                                        <!-- /NUTRIENT LEVELS -->\\n                                    </div>\\n                                </div>\\n                                <!-- /NUTRITION FACTS -->\\n                                <div class=\\"text-right my-5 pb-2 mr-3\\">\\n                                    <a class='text-green-500 hover:text-green-600 duration-300' href=\\"https://world.openfoodfacts.org/product/{ food._id }\\">\\n                                        <i><span class=\\"text-lg\\">\xBB</span> Click here to check the full page!</i>\\n                                    </a>\\n                                </div>\\n                            </div>\\n                        { /each }\\n                    { /if }\\n                { /await }\\n            { /if }\\n        </div>\\n        <!-- /RESULTS -->\\n    </div>\\n</div>\\n\\n<style>\\n    .w-custom {\\n        width: 48rem;\\n    }\\n</style>"],"names":[],"mappings":"AAgcI,SAAS,eAAC,CAAC,AACP,KAAK,CAAE,KAAK,AAChB,CAAC"}`
};
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_food_data;
  $$unsubscribe_food_data = subscribe(food_data, (value) => value);
  let search_inquiry = "";
  $$result.css.add(css);
  $$unsubscribe_food_data();
  return `<div class="${"flex justify-center bg-gray-800"}" style="${"min-height: 100vh"}"><div class="${"mt-16"}">
        <div class="${"mt-5 text-center"}"><h1 class="${"text-white text-4xl"}">Unnamed Food Data Search
            </h1>
            <h3 class="${"text-gray-300 text-lg mt-1.5"}">Powered by <a class="${"text-green-600"}" href="${"https://world.openfoodfacts.org"}">Open Food Facts</a>&#39; API
            </h3></div>
        
        
        <div class="${"mt-20 text-center"}">
            <i class="${"text-gray-400 absolute translate-x-5 translate-y-5 fas fa-search text-2xl"}"></i>
            
            <input class="${"pl-14 rounded-full w-custom h-16 outline-none svelte-1nr4nur"}" type="${"text"}" placeholder="${"Search here!"}"${add_attribute("value", search_inquiry, 0)}>
            <div class="${"mt-8 flex justify-center"}"><button class="${"mx-2.5 rounded-lg bg-gray-200 px-16 py-2 hover:bg-gray-300 duration-300"}">Search</button>
                <button class="${"mx-2.5 rounded-lg bg-gray-200 px-10 py-2 hover:bg-gray-300 duration-300"}">Random Food</button></div></div>
        
        
        <div class="${"mt-16"}">${`${validate_component(FirstTime, "FirstTime").$$render($$result, {}, {}, {})}`}</div>
        </div>
</div>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes
});
export { init, render };
